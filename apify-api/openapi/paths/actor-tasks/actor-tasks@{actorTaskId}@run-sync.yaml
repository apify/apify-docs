post:
  tags:
    - Actor tasks/Run task synchronously
  summary: Run task synchronously (POST)
  description: |
    Runs an actor task and synchronously returns its output.

    The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
    otherwise the HTTP request fails with a timeout error (this won't abort
    the run itself).

    Optionally, you can override the actor input configuration by passing a JSON
    object as the POST payload and setting the `Content-Type: application/json` HTTP header.

    Note that if the object in the POST payload does not define a particular
    input property, the actor run uses the default value defined by the task (or actor's input
    schema if not defined by the task).

    Beware that it might be impossible to maintain an idle HTTP connection for
    an extended period, due to client timeout or network conditions. Make sure your HTTP client is
    configured to have a long enough connection timeout.

    If the connection breaks, you will not receive any information about the run
    and its status.

    Input fields from actor task configuration can be overloaded with values
    passed as the POST payload.

    Just make sure to specify `Content-Type` header to be `application/json` and
    input to be an object.

    To run the task asynchronously, use the [Run
    task](#/reference/actor-tasks/run-collection/run-task) API endpoint instead.
  operationId: actorTask_runSync_post
  parameters:
    - name: actorTaskId
      in: path
      description: Task ID or a tilde-separated owner's username and task's name.
      required: true
      style: simple
      schema:
        type: string
        example: janedoe~my-task
    - name: timeout
      in: query
      description: |
        Optional timeout for the run, in seconds. By default, the run uses a
        timeout specified in the task settings.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 60
    - name: memory
      in: query
      description: |
        Memory limit for the run, in megabytes. The amount of memory can be set
        to a power of 2 with a minimum of 128. By default, the run uses a memory
        limit specified in the task settings.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 256
    - name: maxItems
      in: query
      description: |
        The maximum number of items that the task run should return. This is
        useful for pay-per-result tasks, as it allows you to limit the number of
        results that will be charged to your subscription. You can access the
        maximum number of items in your actor by using the
        `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 1000
    - name: build
      in: query
      description: |
        Specifies the actor build to run. It can be either a build tag or build
        number. By default, the run uses the build specified in the task
        settings (typically `latest`).
      style: form
      explode: true
      schema:
        type: string
        example: 0.1.234
    - name: outputRecordKey
      in: query
      description: |-
        Key of the record from run's default key-value store to be returned
        in the response. By default, it is `OUTPUT`.
      style: form
      explode: true
      schema:
        type: string
        example: OUTPUT
    - name: webhooks
      in: query
      description: |
        Specifies optional webhooks associated with the actor run, which can be
        used to receive a notification

        e.g. when the actor finished or failed. The value is a Base64-encoded
        JSON array of objects defining the webhooks. For more information, see

        [Webhooks
        documentation](https://docs.apify.com/platform/integrations/webhooks).
      style: form
      explode: true
      schema:
        type: string
        example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
  requestBody:
    description: ''
    content:
      application/json:
        schema:
          type: object
        example:
          foo: bar
    required: true
  responses:
    '201':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            type: object
          example:
            bar: foo
    '400':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
  deprecated: false
  x-legacy-doc-urls:
    - https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously/run-task-synchronously-post
    - https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously-post
get:
  tags:
    - Actor tasks/Run task synchronously
  summary: Run task synchronously (GET)
  description: |
    Run a specific task and return its output.

    The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
    otherwise the HTTP request fails with a timeout error (this won't abort
    the run itself).

    Beware that it might be impossible to maintain an idle HTTP connection for
    an extended period, due to client timeout or network conditions. Make sure your HTTP client is
    configured to have a long enough connection timeout.

    If the connection breaks, you will not receive any information about the run
    and its status.

    To run the Task asynchronously, use the
    [Run task asynchronously](#/reference/actor-tasks/run-collection/run-task)
    endpoint instead.
  operationId: actorTask_runSync_get
  parameters:
    - name: actorTaskId
      in: path
      description: Task ID or a tilde-separated owner's username and task's name.
      required: true
      style: simple
      schema:
        type: string
        example: janedoe~my-task
    - name: timeout
      in: query
      description: |
        Optional timeout for the run, in seconds. By default, the run uses a
        timeout specified in the task settings.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 60
    - name: memory
      in: query
      description: |
        Memory limit for the run, in megabytes. The amount of memory can be set
        to a power of 2 with a minimum of 128. By default, the run uses a memory
        limit specified in the task settings.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 256
    - name: maxItems
      in: query
      description: |
        The maximum number of items that the task run should return. This is
        useful for pay-per-result tasks, as it allows you to limit the number of
        results that will be charged to your subscription. You can access the
        maximum number of items in your actor by using the
        `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 1000
    - name: build
      in: query
      description: |
        Specifies the actor build to run. It can be either a build tag or build
        number. By default, the run uses the build specified in the task
        settings (typically `latest`).
      style: form
      explode: true
      schema:
        type: string
        example: 0.1.234
    - name: outputRecordKey
      in: query
      description: |-
        Key of the record from run's default key-value store to be returned
        in the response. By default, it is `OUTPUT`.
      style: form
      explode: true
      schema:
        type: string
        example: OUTPUT
    - name: webhooks
      in: query
      description: |
        Specifies optional webhooks associated with the actor run, which can be
        used to receive a notification

        e.g. when the actor finished or failed. The value is a Base64-encoded
        JSON array of objects defining the webhooks. For more information, see

        [Webhooks
        documentation](https://docs.apify.com/platform/integrations/webhooks).
      style: form
      explode: true
      schema:
        type: string
        example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
  responses:
    '201':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            type: object
          example:
            bar: foo
    '400':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
    '408':
      description: 'Request Timeout: the HTTP request exceeded the 300 second limit'
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
  deprecated: false
  x-legacy-doc-urls:
    - https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously/run-task-synchronously-get
    - https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously-get
