post:
  tags:
    - Actors/Run actor synchronously
  summary: With input
  description: |
    Runs a specific Actor and returns its output.


    The POST payload including its `Content-Type` header is passed as `INPUT` to
    the Actor (usually <code>application/json</code>).

    The HTTP response contains Actors `OUTPUT` record from its default
    key-value store.


    The Actor is started with the default options; you can override them using
    various URL query parameters.

    If the Actor run exceeds 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds,
    the HTTP response will have status 408 (Request Timeout).


    Beware that it might be impossible to maintain an idle HTTP connection for a
    long period of time, due to client timeout or network conditions. Make sure your HTTP client is
    configured to have a long enough connection timeout.

    If the connection breaks, you will not receive any information about the run
    and its status.


    To run the Actor asynchronously, use the [Run
    Actor](#/reference/actors/run-collection/run-actor) API endpoint instead.
  operationId: act_runSync_post
  parameters:
    - name: actorId
      in: path
      description: Actor ID or a tilde-separated owner's username and Actor name.
      required: true
      style: simple
      schema:
        type: string
        example: janedoe~my-actor
    - name: outputRecordKey
      in: query
      description: |-
        Key of the record from run's default key-value store to be returned
                                                     in the response. By default, it is `OUTPUT`.
      style: form
      explode: true
      schema:
        type: string
        example: OUTPUT
    - name: timeout
      in: query
      description: |
        Optional timeout for the run, in seconds. By default, the run uses a
        timeout specified in the default run configuration for the Actor.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 60
    - name: memory
      in: query
      description: |
        Memory limit for the run, in megabytes. The amount of memory can be set
        to a power of 2 with a minimum of 128. By default, the run uses a memory
        limit specified in the default run configuration for the Actor.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 256
    - name: maxItems
      in: query
      description: |
        The maximum number of items that the Actor run should return. This is
        useful for pay-per-result Actors, as it allows you to limit the number
        of results that will be charged to your subscription. You can access the
        maximum number of items in your Actor by using the
        `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 1000
    - name: build
      in: query
      description: |
        Specifies the Actor build to run. It can be either a build tag or build
        number. By default, the run uses the build specified in the default run
        configuration for the Actor (typically `latest`).
      style: form
      explode: true
      schema:
        type: string
        example: 0.1.234
    - name: webhooks
      in: query
      description: |
        Specifies optional webhooks associated with the Actor run, which can be
        used to receive a notification

        e.g. when the Actor finished or failed. The value is a Base64-encoded
        JSON array of objects defining the webhooks. For more information, see

        [Webhooks
        documentation](https://docs.apify.com/platform/integrations/webhooks).
      style: form
      explode: true
      schema:
        type: string
        example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
  requestBody:
    description: ''
    content:
      application/json:
        schema:
          type: object
        example:
          foo: bar
    required: true
  responses:
    '201':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            type: object
          example:
            bar: foo
    '400':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
          example:
            error:
              type: run-failed
              message: >-
                Actor run did not succeed (run ID: 55uatRrZib4xbZs, status:
                FAILED)
    '408':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
          example:
            error:
              type: run-timeout-exceeded
              message: Actor run exceeded timeout of 300 seconds for this API endpoint
  deprecated: false
  x-legacy-doc-urls:
    - https://docs.apify.com/api/v2#/reference/actors/run-actor-synchronously/with-input
    - https://docs.apify.com/api/v2#/reference/actors/with-input
get:
  tags:
    - Actors/Run actor synchronously
  summary: Without input
  description: |
    Runs a specific Actor and returns its output.

    The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
    otherwise the API endpoint returns a timeout error.

    The Actor is not passed any input.


    Beware that it might be impossible to maintain an idle HTTP connection for a
    long period of time,

    due to client timeout or network conditions. Make sure your HTTP client is
    configured to have a long enough connection timeout.

    If the connection breaks, you will not receive any information about the run
    and its status.


    To run the Actor asynchronously, use the [Run
    Actor](#/reference/actors/run-collection/run-actor) API endpoint instead.
  operationId: act_runSync_get
  parameters:
    - name: actorId
      in: path
      description: Actor ID or a tilde-separated owner's username and Actor name.
      required: true
      style: simple
      schema:
        type: string
        example: janedoe~my-actor
    - name: outputRecordKey
      in: query
      description: |-
        Key of the record from run's default key-value store to be returned
                                                     in the response. By default, it is `OUTPUT`.
      style: form
      explode: true
      schema:
        type: string
        example: OUTPUT
    - name: timeout
      in: query
      description: |
        Optional timeout for the run, in seconds. By default, the run uses a
        timeout specified in the default run configuration for the Actor.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 60
    - name: memory
      in: query
      description: |
        Memory limit for the run, in megabytes. The amount of memory can be set
        to a power of 2 with a minimum of 128. By default, the run uses a memory
        limit specified in the default run configuration for the Actor.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 256
    - name: maxItems
      in: query
      description: |
        The maximum number of items that the Actor run should return. This is
        useful for pay-per-result Actors, as it allows you to limit the number
        of results that will be charged to your subscription. You can access the
        maximum number of items in your Actor by using the
        `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
      style: form
      explode: true
      schema:
        type: number
        format: double
        example: 1000
    - name: build
      in: query
      description: |
        Specifies the Actor build to run. It can be either a build tag or build
        number. By default, the run uses the build specified in the default run
        configuration for the Actor (typically `latest`).
      style: form
      explode: true
      schema:
        type: string
        example: 0.1.234
    - name: webhooks
      in: query
      description: |
        Specifies optional webhooks associated with the Actor run, which can be
        used to receive a notification

        e.g. when the Actor finished or failed. The value is a Base64-encoded
        JSON array of objects defining the webhooks. For more information, see

        [Webhooks
        documentation](https://docs.apify.com/platform/integrations/webhooks).
      style: form
      explode: true
      schema:
        type: string
        example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
  responses:
    '201':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            type: object
          example:
            foo: bar
    '400':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
          example:
            error:
              type: run-failed
              message: >-
                Actor run did not succeed (run ID: 55uatRrZib4xbZs, status:
                FAILED)
    '408':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/common/ErrorResponse.yaml"
          example:
            error:
              type: run-timeout-exceeded
              message: Actor run exceeded timeout of 60 seconds for this API endpoint
  deprecated: false
  x-legacy-doc-urls:
    - https://docs.apify.com/api/v2#/reference/actors/run-actor-synchronously/without-input
    - https://docs.apify.com/api/v2#/reference/actors/without-input
